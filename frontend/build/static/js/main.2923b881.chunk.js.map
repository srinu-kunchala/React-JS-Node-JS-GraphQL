{"version":3,"sources":["Auth.js","api.js","components/Departments/index.js","redux/actions/department.js","NavBar/NavBar.js","Callback.js","components/Products/index.js","redux/actions/products.js","components/Categories/index.js","redux/actions/category.js","App.js","serviceWorker.js","redux/reducers/department.js","redux/reducers/category.js","redux/reducers/products.js","redux/store.js","index.js"],"names":["auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","expiresAtCookieValue","document","cookie","match","expiresAt","profile","idToken","Date","getTime","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","idTokenPayload","exp","logout","API_ROOT","Department","possibleConstructorReturn","getPrototypeOf","call","state","data","departmentsInfo","_this2","undefined","props","departments","setState","fetch","method","body","JSON","stringify","query","headers","Content-Type","Authorization","concat","getIdToken","then","res","json","getDepartments","catch","react_default","a","createElement","className","map","departmentList","index","key","id","_id","react_router_dom","to","name","Component","connect","department","dispatch","type","payload","NavBar","e","thisRef","idtoken","history","replace","cname","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","cookieValue","userName","getCookie","jwtDecode","Departments","onClick","withRouter","Callback","requestBody","email","resData","d","setTime","expires","toUTCString","Products","productsData","prop","products","catids_arr","cat_ids","queryBody","getProducts","catID","console","log","_this3","productsList","react_router_bootstrap_lib","src","SERVER_ROOT","image","alt","discounted_price","price","Button","addtoCart","Category","categoriesInfo","categories","departmentName","params","dep","find","o","getDepartmentCategories","currentTarget","category_ids","style","float","marginTop","marginLeft","paddingBottom","categoriesList","push","categoryClick","components_Products","category","App","src_NavBar_NavBar","react_router","path","component","exact","Boolean","window","location","hostname","departmentReducer","arguments","action","objectSpread","categoryReducer","productsReducer","createStore","combineReducers","ReactDOM","render","es","store","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQAqEeA,EAFK,eAhElB,SAAAC,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,MAAQ,IAAIA,IAAMC,QAAQ,CAE7BC,OAAQ,yBACRC,SAAU,0CACVC,SAAU,mCACVC,YAAa,iCACbC,aAAc,WACdC,MAAO,yBAITR,KAAKS,WAAaT,KAAKS,WAAWC,KAAKV,MACvCA,KAAKW,qBAAuBX,KAAKW,qBAAqBD,KAAKV,MAC3DA,KAAKY,gBAAkBZ,KAAKY,gBAAgBF,KAAKV,MACjDA,KAAKa,OAASb,KAAKa,OAAOH,KAAKV,MAC/BA,KAAKc,QAAUd,KAAKc,QAAQJ,KAAKV,MACjC,IAAIe,EAAuBC,SAASC,OAAOC,MAAM,iCAC9CH,IACDf,KAAKmB,UAAYJ,EAAqB,6DAKxC,OAAOf,KAAKoB,6CAIZ,OAAOpB,KAAKqB,kDAIZ,OAAO,IAAIC,MAAOC,UAAYvB,KAAKmB,2CAInCnB,KAAKC,MAAMuB,2DAGU,IAAAC,EAAAzB,KACrB,OAAO,IAAI0B,QAAQ,SAACC,EAASC,GAC3BH,EAAKxB,MAAM4B,UAAU,SAACC,EAAKC,GACzB,OAAID,EAAYF,EAAOE,GAClBC,GAAeA,EAAWV,SAG/BI,EAAKJ,QAAUU,EAAWV,QAC1BI,EAAKL,QAAUW,EAAWC,eAE1BP,EAAKN,UAA4C,IAAhCY,EAAWC,eAAeC,SAC3CN,KANSC,EAAOE,yCAgBpB,OAHA9B,KAAKqB,QAAU,KACfrB,KAAKoB,QAAU,KACfpB,KAAKmB,UAAY,KACVnB,KAAKC,MAAMiC,oCC/DTC,EAAW,4CCMlBC,cACF,SAAAA,IAAa,IAAAX,EAAA,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACTX,EAAA3B,OAAAuC,EAAA,EAAAvC,CAAAE,KAAAF,OAAAwC,EAAA,EAAAxC,CAAAsC,GAAAG,KAAAvC,QACKwC,MAAQ,CAACC,KAAK,MAFVhB,mFAMTzB,KAAK0C,sEAGL1C,KAAK0C,4DAEQ,IAAAC,EAAA3C,UACsB4C,IAAhC5C,KAAK6C,MAAMC,YAAYL,MAAsD,OAAhCzC,KAAK6C,MAAMC,YAAYL,MACnEzC,KAAK+C,SAAS,CAACN,KAAKzC,KAAK6C,MAAMC,YAAYL,OAavCzC,KAAKwC,MAAMC,MACfO,MAAMb,EAAU,CACZc,OAAO,OACPC,KAAOC,KAAKC,UAdE,CACdC,MAAK,uPAcLC,QAAS,CACLC,eAAe,mBACfC,cAAA,UAAAC,OAA2B7D,EAAY8D,iBAE5CC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SACZF,KAAK,SAAAb,GACJH,EAAKE,MAAMiB,eAAe,CAACrB,KAAKK,EAAYL,KAAKK,gBAClDiB,MAAM,SAAAjC,GACL,MAAMA,qCAMlB,IAAIgB,EAAY,GAGhB,YAFmCF,IAAhC5C,KAAK6C,MAAMC,YAAYL,OACtBK,EAAY9C,KAAK6C,MAAMC,YAAYL,MAEnCuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,cACKpB,EAAYsB,IAAI,SAACC,EAAgBC,GAAjB,OACZN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAOE,GAAIH,EAAeI,KAAKT,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMC,GAAE,eAAAlB,OAAiBY,EAAeO,OAASP,EAAeO,kBArDnGC,aA0EVC,cAZS,SAACtC,GACrB,MAAO,CACHM,YAAYN,EAAMuC,WAAWjC,cAGV,SAACkC,GACxB,MAAO,CACHlB,eAAgB,SAACrB,GACbuC,EC5EL,SAAwBvC,GAC3B,MAAO,CACHwC,KAAO,kBACPC,QAAUzC,GDyEGqB,CAAerB,OAIrBqC,CAA6C1C,GE1EtD+C,kLACMC,EAAEC,EAASC,EAASnE,GACxBvB,EAAYkB,UACZE,SAASC,OAASqE,EAAU,2CAC5BtE,SAASC,OAASE,EAAY,2CAC9BkE,EAAQxC,MAAM0C,QAAQC,QAAQ,uCAExBC,GAIN,IAHA,IAAIb,EAAOa,EAAQ,IAEfC,EADgBC,mBAAmB3E,SAASC,QACzB2E,MAAM,KACrBC,EAAI,EAAGA,EAAGH,EAAGI,OAAQD,IAAK,CAE9B,IADA,IAAIE,EAAIL,EAAGG,GACY,MAAhBE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAwB,IAApBF,EAAEG,QAAQtB,GACV,OAAOmB,EAAEE,UAAUrB,EAAKkB,OAAQC,EAAED,QAG9C,OAAO,sCAGC,IACAK,EAEAC,EAHA3E,EAAAzB,KAOJ,OALAmG,EAAcnG,KAAKqG,UAAU,cAGzBD,EAAWE,IAAUH,GAAavB,MAGlCZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMP,UAAU,eAAeQ,GAAG,KAAlC,QAGAX,EAAAC,EAAAC,cAACqC,EAAD,OAEI3G,EAAYgB,mBACZoD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeqC,QAAS5G,EAAYiB,QAAtD,WAGAjB,EAAYgB,mBACZoD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBiC,GACpCpC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeqC,QAAS,SAACpB,GAAD,OAAK3D,EAAKX,QAAQsE,EAAE3D,EAAK,UAAW,eAA9E,sBA7CHoD,aAsDN4B,cAAWtB,4BCvDpBuB,cACJ,SAAAA,EAAY7D,GAAM,IAAApB,EAAA,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IAChBjF,EAAA3B,OAAAuC,EAAA,EAAAvC,CAAAE,KAAAF,OAAAwC,EAAA,EAAAxC,CAAA4G,GAAAnE,KAAAvC,KAAM6C,KACDL,MAAM,GAFKf,wNAMV7B,EAAYe,8BACZgG,EAAc,CAClBtD,MAAK,8DAAAI,OAE6B7D,EAAYa,aAAamE,KAFtD,cAAAnB,OAEuE7D,EAAYa,aAAamG,MAFhG,8EAQP5D,MAAMb,EAAU,CACdc,OAAO,OACPC,KAAKC,KAAKC,UAAUuD,GACpBrD,QAAS,CACPC,eAAe,mBACfC,cAAA,UAAAC,OAA2B7D,EAAY8D,iBAExCC,KAAK,SAAAC,GACN,OAAOA,EAAIC,SACVF,KAAK,SAAAkD,GACR,IAAIC,EAAI,IAAIxF,KACZwF,EAAEC,QAAQD,EAAEvF,UAAa,OACzB,IAAIyF,EAAU,WAAYF,EAAEG,cAC5BjG,SAASC,OAAS,WAAkBrB,EAAY8D,aAAe,IAAMsD,EAAU,UAC/E,IAAI7F,EAAavB,EAAYuB,UAC7BH,SAASC,OAAS,aAAoBE,EAAY,IAAM6F,EAAU,UAClErE,EAAKE,MAAM0C,QAAQC,QAAQ,qIAI3B,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCAvCeW,aA6CR4B,cAAWC,uBC3CpBQ,cACF,SAAAA,IAAa,IAAAzF,EAAA,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACTzF,EAAA3B,OAAAuC,EAAA,EAAAvC,CAAAE,KAAAF,OAAAwC,EAAA,EAAAxC,CAAAoH,GAAA3E,KAAAvC,QACKwC,MAAQ,CAACC,KAAK,MAFVhB,mFAKTzB,KAAKmH,iEAEiBtE,GACtB7C,KAAKmH,aAAatE,wCAETuE,GAAK,IAAAzE,EAAA3C,KACV6C,EAAM,KAMV,QAA4BD,KAJzBC,EADAuE,GAGQpH,KAAK6C,OAENwE,SAAS5E,MAA8C,OAAxBI,EAAMwE,SAAS5E,KACpD,GAAGzC,KAAKwC,MAAMC,KACV,GAAGI,EAAMwE,SAAS5E,OAASzC,KAAKwC,MAAMC,KACtC,CACI,IAAI6E,EAAanE,KAAKC,UAAUP,EAAM0E,SAChCC,EAAY,CAClBnE,MAAK,iFAAAI,OAEqB6D,EAFrB,qbAeLtE,MAAMb,EAAU,CACZc,OAAS,OACTC,KAAOC,KAAKC,UAAUoE,GACtBlE,QAAU,CACNC,eAAiB,mBACjBC,cAAA,UAAAC,OAA4B7D,EAAY8D,iBAE7CC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SACZF,KAAK,SAAA0D,GACJ1E,EAAKE,MAAM4E,YAAY,CAAChF,KAAK4E,EAAS5E,KAAK4E,aAC5CtD,MAAM,SAAAjC,GACL,MAAMA,SAKX9B,KAAK+C,SAAS,CAACN,KAAKI,EAAMwE,SAAS5E,KAAKiF,MAAM,YAKlD1H,KAAK+C,SAAS,CAACN,KAAKI,EAAMwE,SAAS5E,KAAKiF,MAAM,WAIlD,CACH,IAAIJ,EAAanE,KAAKC,UAAUP,EAAM0E,SAChCC,EAAY,CAClBnE,MAAK,yDAAAI,OAEqB6D,EAFrB,iTAeLtE,MAAMb,EAAU,CACZc,OAAS,OACTC,KAAOC,KAAKC,UAAUoE,GACtBlE,QAAU,CACNC,eAAiB,mBACjBC,cAAA,UAAAC,OAA4B7D,EAAY8D,iBAE7CC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SACZF,KAAK,SAAA0D,GACJ1E,EAAKE,MAAM4E,YAAY,CAAChF,KAAK4E,EAAS5E,KAAK4E,aAC5CtD,MAAM,SAAAjC,GACL,MAAMA,uCAIJsD,GACNuC,QAAQC,IAAI5H,KAAK6C,wCAGb,IAAAgF,EAAA7H,KACAqH,EAAW,GAIf,YAHgCzE,IAA7B5C,KAAK6C,MAAMwE,SAAS5E,OACnB4E,EAASrH,KAAK6C,MAAMwE,SAAS5E,MAG7BuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEPkD,EAASjD,IAAI,SAAC0D,EAAcxD,GAAf,OACTN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOH,UAAU,oDACvBH,EAAAC,EAAAC,cAAC6D,EAAA,cAAD,CACIpD,GACA,YACAmD,EAAarD,IACb,IACAqD,EAAalD,MAGbZ,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,OACA8D,IAAKC,yDAAwCH,EAAaI,MAC1DC,IAAKF,yDAAwCH,EAAaI,UAI9DlE,EAAAC,EAAAC,cAAC6D,EAAA,cAAD,CACIpD,GACA,YACAmD,EAAarD,IACb,IACAqD,EAAalD,MAGbZ,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc2D,EAAalD,MAAW,MAGxDZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACT,SACkCvB,IAAlCkF,EAAaM,kBACoB,SAAlCN,EAAaM,iBACXN,EAAaM,iBACbN,EAAaO,OAEnBrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQ9B,QAASqB,EAAKU,UAAU7H,KAAKmH,IAArC,0BAnJLhD,aAyKRC,cAbS,SAACtC,GACrB,MAAO,CACH6E,SAAW7E,EAAM6E,SAASA,WAGP,SAACrC,GACxB,MAAO,CACHyC,YAAc,SAAChF,GACXuC,EC3KL,SAAqBvC,GACxB,MAAO,CACHwC,KAAK,eACLC,QAAQzC,GDwKKgF,CAAYhF,OAKlBqC,CAA6CoC,GE1KtDsB,cACF,SAAAA,IAAa,IAAA/G,EAAA,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,IACT/G,EAAA3B,OAAAuC,EAAA,EAAAvC,CAAAE,KAAAF,OAAAwC,EAAA,EAAAxC,CAAA0I,GAAAjG,KAAAvC,QACKwC,MAAQ,CAACC,KAAK,KAAMiF,MAAM,MAFtBjG,mFAKTzB,KAAKyI,mEAEiB5F,GACtB7C,KAAKyI,eAAe5F,0CAETuE,GACX,IAAIvE,EAAM,KAMV,QAA8BD,KAJ3BC,EADAuE,GAGQpH,KAAK6C,OAEN6F,WAAWjG,MAAgD,OAA1BI,EAAM6F,WAAWjG,KACxD,GAAGzC,KAAKwC,MAAMC,KACT,GAAGI,EAAM6F,WAAWjG,OAASzC,KAAKwC,MAAMC,KACxC,CACG,IAAIkG,EAAiB9F,EAAM3B,MAAM0H,OAAOD,eACpCE,EAAMhG,EAAMC,YAAYL,KAAKqG,KAAK,SAAAC,GAAC,OAAIA,EAAEnE,OAAS+D,IAChDnB,EAAY,CAClBnE,MAAK,2FAAAI,OAE+BoF,EAAIpE,IAFnC,kOAULzB,MAAMb,EAAU,CACZc,OAAS,OACTC,KAAOC,KAAKC,UAAUoE,GACtBlE,QAAU,CACNC,eAAiB,mBACjBC,cAAA,UAAAC,OAA4B7D,EAAY8D,iBAE7CC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SACZF,KAAK,SAAA+E,GACJ7F,EAAMmG,wBAAwB,CAACvG,KAAKiG,EAAWjG,KAAKiG,eACrD3E,MAAM,SAAAjC,GACL,MAAMA,SAKV9B,KAAK+C,SAAS,CAACN,KAAKI,EAAM6F,WAAWjG,KAAKiF,MAAM,YAKpD1H,KAAK+C,SAAS,CAACN,KAAKI,EAAM6F,WAAWjG,KAAKiF,MAAM,WAIpD,CACA,IAAIiB,EAAiB9F,EAAM3B,MAAM0H,OAAOD,eACpCE,EAAMhG,EAAMC,YAAYL,KAAKqG,KAAK,SAAAC,GAAC,OAAIA,EAAEnE,OAAS+D,IAChDnB,EAAY,CAClBnE,MAAK,2EAAAI,OAE+BoF,EAAIpE,IAFnC,kLAULzB,MAAMb,EAAU,CACZc,OAAS,OACTC,KAAOC,KAAKC,UAAUoE,GACtBlE,QAAU,CACNC,eAAiB,mBACjBC,cAAA,UAAAC,OAA4B7D,EAAY8D,iBAE7CC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SACZF,KAAK,SAAA+E,GACJ7F,EAAMmG,wBAAwB,CAACvG,KAAKiG,EAAWjG,KAAKiG,eACrD3E,MAAM,SAAAjC,GACL,MAAMA,2CAMJsD,GACVpF,KAAK+C,SAAS,CAAC2E,MAAMtC,EAAE6D,cAAczE,sCAEjC,IAAA7B,EAAA3C,KACA0I,EAAW,GACXC,EAAiB3I,KAAK6C,MAAM3B,MAAM0H,OAAOD,eACnC3I,KAAK6C,MAAMC,YAAYL,KAAKqG,KAAK,SAAAC,GAAC,OAAIA,EAAEnE,OAAS+D,SACzB/F,IAA/B5C,KAAK6C,MAAM6F,WAAWjG,OACrBiG,EAAW1I,KAAK6C,MAAM6F,WAAWjG,MAErC,IAAIyG,EAAe,GACvB,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,UAAKyE,GACL3E,EAAAC,EAAAC,cAAA,OAAKiF,MAAO,CAACC,MAAQ,OAAQC,UAAa,OAAQC,WAAc,SAAUC,cAAiB,SAEvFb,EAAWtE,IAAI,SAACoF,EAAgBlF,GAAjB,OACX4E,EAAaO,KAAKD,EAAe/E,KACjCT,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOE,GAAIgF,EAAe/E,IAAK+B,QAAS7D,EAAK+G,cAAchJ,KAAKiC,IAAQ6G,EAAe5E,SAIzGZ,EAAAC,EAAAC,cAACyF,EAAD,CAAUpC,QAA8B,OAArBvH,KAAKwC,MAAMkF,MAAiB1H,KAAKwC,MAAMkF,MAAQwB,aApHvDrE,aAuIRC,cAbS,SAACtC,GACrB,MAAO,CACHkG,WAAWlG,EAAMoH,SAASlB,WAC1B5F,YAAYN,EAAMuC,WAAWjC,cAGV,SAACkC,GACxB,MAAO,CACHgE,wBAAyB,SAACvG,GACtBuC,ECzIL,SAAiCvC,GACpC,MAAO,CACHwC,KAAO,iBACPC,QAAUzC,GDsIGuG,CAAwBvG,OAI9BqC,CAA6C0D,GE1H7CqB,mLAXX,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4F,EAAD,MAEA9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,KAAK,8BAA8BC,UAAWzB,IACrDxE,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,YAAYC,UAAWvD,YAP/B7B,aCMEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpJ,MACvB,+ECJSqJ,EAdW,WAEf,IAFgB/H,EAEhBgI,UAAA1E,OAAA,QAAAlD,IAAA4H,UAAA,GAAAA,UAAA,GAFsB,CAC7B1H,YAAc,IAChB2H,EAASD,UAAA1E,OAAA,EAAA0E,UAAA,QAAA5H,EACP,OAAO6H,EAAOxF,MACV,IAAK,kBACLzC,EAAK1C,OAAA4K,EAAA,EAAA5K,CAAA,GACE0C,EADF,CAEDM,YAAc2H,EAAOvF,UAEzB,QACA,OAAO1C,ICIAmI,EAdS,WAEb,IAFcnI,EAEdgI,UAAA1E,OAAA,QAAAlD,IAAA4H,UAAA,GAAAA,UAAA,GAFoB,CAC3B9B,WAAa,IACf+B,EAASD,UAAA1E,OAAA,EAAA0E,UAAA,QAAA5H,EACP,OAAO6H,EAAOxF,MACV,IAAK,iBACLzC,EAAK1C,OAAA4K,EAAA,EAAA5K,CAAA,GACE0C,EADF,CAEDkG,WAAa+B,EAAOvF,UAExB,QACA,OAAO1C,ICIAoI,EAdS,WAEZ,IAFapI,EAEbgI,UAAA1E,OAAA,QAAAlD,IAAA4H,UAAA,GAAAA,UAAA,GAFmB,CAC3BnD,SAAS,IACVoD,EAASD,UAAA1E,OAAA,EAAA0E,UAAA,QAAA5H,EACR,OAAO6H,EAAOxF,MACV,IAAK,eACDzC,EAAM1C,OAAA4K,EAAA,EAAA5K,CAAA,GACC0C,EADF,CAED6E,SAAWoD,EAAOvF,UAGtB,QACI,OAAO1C,ICNRqI,cAAYC,YAAgB,CAAC/F,aAAW6E,WAAUvC,aAAY,ICI7E0D,IAASC,OACLhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAUC,MAAOA,GACjBlH,EAAAC,EAAAC,cAACQ,EAAA,cAAD,KACIV,EAAAC,EAAAC,cAACiH,EAAD,QAGRnK,SAASoK,eAAe,SLkHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,KAAK,SAAA6H,GACjCA,EAAaC","file":"static/js/main.2923b881.chunk.js","sourcesContent":["import auth0 from 'auth0-js';\r\n\r\nclass Auth {\r\n  constructor() {\r\n    this.auth0 = new auth0.WebAuth({\r\n      // the following three lines MUST be updated\r\n      domain: 'dev-or-d8gpn.auth0.com',\r\n      audience: 'https://dev-or-d8gpn.auth0.com/userinfo',\r\n      clientID: 'rYvvdsdd3hypHqA2VM2DCj35NHbwB0b5',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      responseType: 'id_token',\r\n      scope: 'openid profile email'\r\n    });\r\n\r\n        \r\n    this.getProfile = this.getProfile.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.signOut = this.signOut.bind(this);   \r\n    let expiresAtCookieValue = document.cookie.match('(^|;) ?' + 'expiresAt' + '=([^;]*)(;|$)');    \r\n    if(expiresAtCookieValue){\r\n      this.expiresAt = expiresAtCookieValue[2];\r\n    } \r\n  }\r\n\r\n  getProfile() {\r\n    return this.profile;\r\n  }\r\n\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return new Date().getTime() < this.expiresAt;\r\n  }\r\n\r\n  signIn() {    \r\n    this.auth0.authorize();\r\n  }\r\n\r\n  handleAuthentication() {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (err) return reject(err);\r\n        if (!authResult || !authResult.idToken) {\r\n          return reject(err);\r\n        }\r\n        this.idToken = authResult.idToken;\r\n        this.profile = authResult.idTokenPayload;\r\n        // set the time that the id token will expire at\r\n        this.expiresAt = authResult.idTokenPayload.exp * 1000;        \r\n        resolve();\r\n      });\r\n    })\r\n  }\r\n\r\n  signOut() {\r\n    // clear id token, profile, and expiration\r\n    this.idToken = null;\r\n    this.profile = null;\r\n    this.expiresAt = null;\r\n    return this.auth0.logout();\r\n  }\r\n}\r\n\r\nconst auth0Client = new Auth();\r\n\r\nexport default auth0Client;","export const API_ROOT = \"http://localhost:3001/graphql\";\r\nexport const SERVER_ROOT = \"https://reactshop.amoha.co:5000/\";","import React, { Component} from 'react';\r\nimport auth0Client from '../../Auth';\r\nimport {API_ROOT} from '../../api';\r\nimport { connect } from 'react-redux';\r\nimport { getDepartments } from '../../redux/actions/department';\r\nimport { Link } from \"react-router-dom\";\r\nclass Department extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {data:null};\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.departmentsInfo();\r\n    } \r\n    componentWillReceiveProps(){\r\n        this.departmentsInfo();\r\n    } \r\n    departmentsInfo(){\r\n        if(this.props.departments.data !== undefined && this.props.departments.data !== null){\r\n            this.setState({data:this.props.departments.data});  \r\n        }\r\n            const queryBody = {\r\n                query : `\r\n                    query{\r\n                        departments{\r\n                            _id\r\n                            name\r\n                            description\r\n                        }\r\n                    }\r\n                `\r\n            };\r\n            if(!this.state.data){        \r\n            fetch(API_ROOT, {\r\n                method:\"POST\",\r\n                body : JSON.stringify(queryBody),            \r\n                headers: {\r\n                    'Content-Type':'application/json', \r\n                    'Authorization': `Bearer ${auth0Client.getIdToken()}` \r\n                }\r\n            }).then(res=>{\r\n                return res.json();\r\n            }).then(departments =>{\r\n                this.props.getDepartments({data:departments.data.departments});                       \r\n            }).catch(err =>{\r\n                throw err;\r\n            })\r\n        } \r\n    }\r\n\r\nrender(){\r\n    let departments=[];    \r\n    if(this.props.departments.data !== undefined)\r\n        departments=this.props.departments.data;\r\n    return(\r\n        <div className=\"departmentlist\">\r\n           <ul> {\r\n                departments.map((departmentList, index) =>(                    \r\n                    <li key={index} id={departmentList._id}><Link to={`/categories/${departmentList.name}`}>{departmentList.name}</Link></li>\r\n                ))\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        departments:state.department.departments\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        getDepartments: (data) =>{\r\n            dispatch(getDepartments(data));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Department);","export function getDepartments(data){\r\n    return {\r\n        type : \"GET_DEPARTMENTS\",\r\n        payload : data\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport auth0Client from '../Auth';\r\nimport jwtDecode from 'jwt-decode';\r\nimport Departments from '../components/Departments';\r\n\r\nclass NavBar extends Component{     \r\n    signOut(e,thisRef, idtoken, expiresAt) {        \r\n        auth0Client.signOut();\r\n        document.cookie = idtoken + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';  \r\n        document.cookie = expiresAt + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';      \r\n        thisRef.props.history.replace('/');\r\n      };\r\n    getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);        \r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }                    \r\n            if (c.indexOf(name) === 0) {               \r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n    return null;\r\n    }\r\n    \r\n    render(){\r\n        let cookieValue;        \r\n        cookieValue = this.getCookie('idtoken');\r\n        let userName;\r\n        if(cookieValue){\r\n            userName = jwtDecode(cookieValue).name;\r\n        }      \r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-dark bg-primary fixed-top\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                    <Departments />\r\n                    {\r\n                       !auth0Client.isAuthenticated() && \r\n                        <button className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</button>\r\n                    }\r\n                    {\r\n                        auth0Client.isAuthenticated() &&\r\n                        <div>                                                    \r\n                        <label className=\"mr-2 text-white\">{userName}</label>\r\n                        <button className=\"btn btn-dark\" onClick={(e)=>this.signOut(e,this,\"idtoken\", \"expiresAt\")}>Sign Out</button>\r\n                        </div>\r\n                    }\r\n                </nav>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default withRouter(NavBar);","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport auth0Client from './Auth';\r\nimport {API_ROOT} from './api';\r\n\r\nclass Callback extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    await auth0Client.handleAuthentication();       \r\n    const requestBody = {\r\n      query : `\r\n        mutation{\r\n          createUser(userInput:{name:\"${auth0Client.getProfile().name}\", email:\"${auth0Client.getProfile().email}\"}){            \r\n            name\r\n            email\r\n        }\r\n      }`\r\n    }\r\n    fetch(API_ROOT, {\r\n      method:'POST',\r\n      body:JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type':'application/json', \r\n        'Authorization': `Bearer ${auth0Client.getIdToken()}` \r\n      }\r\n    }).then(res =>{\r\n      return res.json();   \r\n    }).then(resData =>{    \r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (1*24*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = \"idtoken\" + \"=\" + auth0Client.getIdToken() + \";\" + expires + \";path=/\"; \r\n    let expiresAt =  auth0Client.expiresAt;\r\n    document.cookie = \"expiresAt\" + \"=\" + expiresAt + \";\" + expires + \";path=/\";   \r\n    this.props.history.replace('/');    \r\n    });    \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Loading profile...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Callback);","import React, { Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProducts} from \"../../redux/actions/products\";\r\nimport {API_ROOT, SERVER_ROOT} from '../../api';\r\nimport auth0Client from '../../Auth';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from 'react-bootstrap';\r\nclass Products extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {data:null}\r\n    }\r\n    componentDidMount(){        \r\n        this.productsData();\r\n    }\r\n    componentWillReceiveProps(props){\r\n        this.productsData(props);\r\n    }\r\n    productsData(prop){\r\n        let props=null;\r\n        if(prop){\r\n           props = prop;\r\n        }else{\r\n           props = this.props;\r\n        }\r\n        if((props.products.data !== undefined && props.products.data !== null)){ \r\n            if(this.state.data){            \r\n                if(props.products.data === this.state.data)\r\n                {\r\n                    let catids_arr = JSON.stringify(props.cat_ids);        \r\n                    const queryBody = {\r\n                    query:`\r\n                        query{\r\n                            products(cat_id:${catids_arr}){                  \r\n                                _id\r\n                                name\r\n                                description\r\n                                price\r\n                                discounted_price\r\n                                image\r\n                                image_2\r\n                                thumbnail\r\n                            }\r\n                        }\r\n                    `  \r\n                    };                \r\n                    fetch(API_ROOT, {\r\n                        method : \"POST\",\r\n                        body : JSON.stringify(queryBody),\r\n                        headers : {\r\n                            'Content-Type' : 'application/json',\r\n                            'Authorization' : `Bearer ${auth0Client.getIdToken()}`\r\n                        }\r\n                    }).then(res=>{\r\n                        return res.json();\r\n                    }).then(products =>{          \r\n                        this.props.getProducts({data:products.data.products});\r\n                    }).catch(err =>{\r\n                        throw err;\r\n                    }) \r\n                }\r\n                else\r\n                {\r\n                   this.setState({data:props.products.data,catID:null});\r\n                }\r\n           }   \r\n           else\r\n           {\r\n               this.setState({data:props.products.data,catID:null});\r\n           }\r\n           \r\n       } \r\n       else{\r\n        let catids_arr = JSON.stringify(props.cat_ids);        \r\n        const queryBody = {\r\n        query:`\r\n            query{\r\n                products(cat_id:${catids_arr}){                  \r\n                    _id\r\n                    name\r\n                    description\r\n                    price\r\n                    discounted_price\r\n                    image\r\n                    image_2\r\n                    thumbnail\r\n                }\r\n            }\r\n        `  \r\n        };                \r\n        fetch(API_ROOT, {\r\n            method : \"POST\",\r\n            body : JSON.stringify(queryBody),\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                'Authorization' : `Bearer ${auth0Client.getIdToken()}`\r\n            }\r\n        }).then(res=>{\r\n            return res.json();\r\n        }).then(products =>{                                               \r\n            this.props.getProducts({data:products.data.products});\r\n        }).catch(err =>{\r\n            throw err;\r\n        }) \r\n       }\r\n    }\r\n    addtoCart(e){\r\n        console.log(this.props);\r\n        \r\n    }\r\n    render(){\r\n        let products = [];\r\n        if(this.props.products.data !== undefined){\r\n            products=this.props.products.data;\r\n        }       \r\n        return(             \r\n            <div className=\"row\">                       \r\n             {\r\n                    products.map((productsList, index) =>(                                              \r\n                        <div key={index} className=\"product_single_block col-md-6 col-lg-3 item pb-3\">\r\n                            <LinkContainer\r\n                                to={\r\n                                \"/product/\" +\r\n                                productsList._id +\r\n                                \"/\" +\r\n                                productsList.name\r\n                                }\r\n                            >\r\n                                <a>\r\n                                <img\r\n                                src={SERVER_ROOT + \"images/product_images/\" +productsList.image}\r\n                                alt={SERVER_ROOT + \"images/product_images/\" +productsList.image}\r\n                                />\r\n                                </a>\r\n                            </LinkContainer>\r\n                            <LinkContainer\r\n                                to={\r\n                                \"/product/\" +\r\n                                productsList._id +\r\n                                \"/\" +\r\n                                productsList.name\r\n                                }\r\n                            >\r\n                                <a>\r\n                                <h5 className=\"black pt-3\">{productsList.name}</h5>{\" \"}\r\n                                </a>\r\n                            </LinkContainer>\r\n                            <h3 className=\"red\">\r\n                                {\"$\"}                                    \r\n                                {productsList.discounted_price !== undefined &&\r\n                                productsList.discounted_price !== \"0.00\"\r\n                                ? productsList.discounted_price\r\n                                : productsList.price}\r\n                            </h3>\r\n                            <Button onClick={this.addtoCart.bind(this)}>Add to cart</Button>                            \r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>                          \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        products : state.products.products\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        getProducts : (data)=>{\r\n            dispatch(getProducts(data));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","export function getProducts(data){\r\n    return {\r\n        type:\"GET_PRODUCTS\",\r\n        payload:data\r\n    }\r\n\r\n} ","import React, {Component} from \"react\";\r\nimport {API_ROOT} from '../../api';\r\nimport auth0Client from '../../Auth';\r\nimport { getDepartmentCategories } from '../../redux/actions/category';\r\nimport { connect } from 'react-redux';\r\nimport Products from \"../Products\";\r\nclass Category extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {data:null, catID:null};\r\n    }\r\n    componentDidMount(){   \r\n        this.categoriesInfo();\r\n    }\r\n    componentWillReceiveProps(props){\r\n        this.categoriesInfo(props);\r\n    }\r\n    categoriesInfo(prop){\r\n        let props=null;\r\n        if(prop){\r\n           props = prop;\r\n        }else{\r\n           props = this.props;\r\n        }        \r\n        if((props.categories.data !== undefined && props.categories.data !== null)){ \r\n            if(this.state.data){            \r\n                 if(props.categories.data === this.state.data)\r\n                 {\r\n                    let departmentName = props.match.params.departmentName;            \r\n                    let dep = props.departments.data.find(o => o.name === departmentName);                \r\n                    const queryBody = {\r\n                    query:`\r\n                        query{\r\n                            categories(department_id:\"${dep._id}\"){                  \r\n                                _id\r\n                                name\r\n                                description\r\n                            }\r\n                        }\r\n                    `  \r\n                    };                \r\n                    fetch(API_ROOT, {\r\n                        method : \"POST\",\r\n                        body : JSON.stringify(queryBody),\r\n                        headers : {\r\n                            'Content-Type' : 'application/json',\r\n                            'Authorization' : `Bearer ${auth0Client.getIdToken()}`\r\n                        }\r\n                    }).then(res=>{\r\n                        return res.json();\r\n                    }).then(categories =>{                                      \r\n                        props.getDepartmentCategories({data:categories.data.categories});\r\n                    }).catch(err =>{\r\n                        throw err;\r\n                    }) \r\n                 }\r\n                 else\r\n                 {\r\n                    this.setState({data:props.categories.data,catID:null});\r\n                 }\r\n            }   \r\n            else\r\n            {\r\n                this.setState({data:props.categories.data,catID:null});\r\n            }\r\n            \r\n        } \r\n        else{\r\n            let departmentName = props.match.params.departmentName;            \r\n            let dep = props.departments.data.find(o => o.name === departmentName);                \r\n            const queryBody = {\r\n            query:`\r\n                query{\r\n                    categories(department_id:\"${dep._id}\"){                  \r\n                        _id\r\n                        name\r\n                        description\r\n                    }\r\n                }\r\n            `  \r\n            };                \r\n            fetch(API_ROOT, {\r\n                method : \"POST\",\r\n                body : JSON.stringify(queryBody),\r\n                headers : {\r\n                    'Content-Type' : 'application/json',\r\n                    'Authorization' : `Bearer ${auth0Client.getIdToken()}`\r\n                }\r\n            }).then(res=>{\r\n                return res.json();\r\n            }).then(categories =>{                                      \r\n                props.getDepartmentCategories({data:categories.data.categories});\r\n            }).catch(err =>{\r\n                throw err;\r\n            }) \r\n        }\r\n       \r\n        \r\n    }\r\n    categoryClick(e){\r\n        this.setState({catID:e.currentTarget.id});\r\n    }\r\n    render(){\r\n        let categories=[]; \r\n        let departmentName = this.props.match.params.departmentName;            \r\n        let dep = this.props.departments.data.find(o => o.name === departmentName);        \r\n        if(this.props.categories.data !== undefined){\r\n            categories=this.props.categories.data;\r\n        }\r\n        let category_ids = [];          \r\n    return(\r\n        <div className=\"categoriesList container\">\r\n            <div className=\"row pt-5\">\r\n            <h2>{departmentName}</h2>\r\n            <div style={{\"float\":\"left\", \"marginTop\": \"76px\", \"marginLeft\": \"-122px\", \"paddingBottom\": \"10px\" }}>\r\n            {\r\n                categories.map((categoriesList, index) =>(\r\n                    category_ids.push(categoriesList._id),                       \r\n                    <div key={index} id={categoriesList._id} onClick={this.categoryClick.bind(this)}>{categoriesList.name}</div>\r\n                ))\r\n            }\r\n            </div>                            \r\n            <Products cat_ids={this.state.catID !== null ? this.state.catID : category_ids } />\r\n        </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        categories:state.category.categories,\r\n        departments:state.department.departments\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        getDepartmentCategories: (data) =>{\r\n            dispatch(getDepartmentCategories(data));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category); ","export function getDepartmentCategories(data){\r\n    return {\r\n        type : \"GET_CATEGORIES\",\r\n        payload : data\r\n    }\r\n}","import React, { Component } from 'react';\nimport NavBar from './NavBar/NavBar';\nimport Callback from './Callback';\nimport Department from './components/Departments/index';\nimport Category from './components/Categories/index';\nimport { Route } from 'react-router';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n              \n        <Route path=\"/categories/:departmentName\" component={Category} />        \n        <Route exact path='/callback' component={Callback}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const departmentReducer = (state={\r\n    departments : []\r\n},action)=>{\r\n    switch(action.type){\r\n        case \"GET_DEPARTMENTS\":\r\n        state = {\r\n            ...state,\r\n            departments : action.payload\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default departmentReducer;","const categoryReducer = (state={\r\n    categories : []\r\n},action)=>{\r\n    switch(action.type){\r\n        case \"GET_CATEGORIES\":\r\n        state = {\r\n            ...state,\r\n            categories : action.payload\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default categoryReducer;","const productsReducer = (state={\r\n    products:[]\r\n}, action)=>{\r\n    switch(action.type){\r\n        case \"GET_PRODUCTS\":\r\n            state={\r\n                ...state,\r\n                products : action.payload\r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default productsReducer;","import {createStore, combineReducers} from 'redux';\r\nimport department from './reducers/department';\r\nimport category from './reducers/category';\r\nimport products from './reducers/products';\r\n\r\nexport default createStore(combineReducers({department,category, products}), {});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}